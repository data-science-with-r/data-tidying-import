---
title: "Tidy Basketball"
toc: true
webr:
  packages: ['tidyverse', 'scales']
filters:
  - webr
---

::: callout-important
Please reference the `Meet the toolkit: Programming exercises` in `course 1 (or refresher)` for information and instructions on how to interact with the programming exercise below.
:::

## Getting Started

```{r}
#| echo: false
#| include: false
library(tidyverse) # put in r file to r chunks have packages to use
library(scales)
library(ggridges)
library(gridExtra)
```

```{webr-r}
#| context: setup
download.file(
  "https://raw.githubusercontent.com/ElijahMeyer3/Coursera/main/data/trailblazer21.csv",
  "blazer.csv"
)

options(readr.show_progress = FALSE)

blazer_long |>
  group_by(player) |>
  count(player)
```

The Portland Trailblazers are a National Basketball Association (NBA) sports team. In this mini analysis, we will work with a data set that has informatino of the points scored by 9 Portland Trailblazers players across the first 10 games of the 2021-2022 NBA season. If you would like to become more familiar with the game of basketball, please click [here](https://www.britannica.com/sports/basketball). If you would like more information on the Portland Trailblazers, please click [here](https://en.wikipedia.org/wiki/Portland_Trail_Blazers).

A key to these data can be found below:

| variable name | description                           |
|---------------|---------------------------------------|
| player        | name of player                        |
| game1_home    | points scored on game 1 on home court |
| ...           | ...                                   |
| game3_away    | points scored on game 3 on away court |
| ...           | ...                                   |
| game10_home   | points scored on game 10 on home court|


Read in the data below.

```{webr-r}
#| echo: false
blazer <- read_csv("trailblazer21.csv")
```

```{r}
#| echo: false
#| warning: false
#| message: false
blazer <- read_csv("data/trailblazer21.csv") # put in R file to r chunks have data to use
```

### Packages

We'll use **tidyverse** for the majority of the analysis and **scales** for pretty plot labels later on.


```{r}
#| label: load-packages
#| message: false
#| warning: false
library(tidyverse)
library(scales)
```

### Get to know the data

Use `glimpse()` to get an overview (or "glimpse") of the data. How many rows and columns are in this data set? In addition, make note of the types of variables you are working with.

```{webr-r}
# insert code here
```

::: callout-warning
If you receive the error [Error: object 'blazer' not found]{style="color:red;"}, go back and read in your data above.
:::

::: {.callout-tip collapse="true"}
## Solution

```{r}
glimpse(blazer)
```

There are 9 rows and 11 columns in blazer data set.

`player` is a character variable; the remaining variables are doubles.
:::

Suppose you are asked to recreate the plot below... 

![](images/blazer_pic.png){fig-align="center"}

Identify the variables you would need to use to recreate this plot. Can this plot be recreated with how your `blazer` data set current format? 

::: {.callout-tip collapse="true"}
## Solution
Variables in the above plot include `player`, `game`, `location`, and `points`. This plot can not be recreated with how the `blazer` data set is currently formatted. 
:::

Now, think critically about how we could transform our `blazer` data set to have the variables necessary to make the plot above. What would our new data set have to look like? 

::: {.callout-tip collapse="true"}
## Solution
We have a `player` column in the data set. In order to get a  `game`, `location`, and `points`, we can use `pivot_longer()`, which will take this wide data set and make it into a longer data set. That is, we can bring the variable names of `game1_home`, `game2_home`, etc. into our data set as values, which is needed to recreate the plot above).
:::

See more information about `pivot_longer()` [here](https://tidyr.tidyverse.org/reference/pivot_longer.html). We are going to create our final data set in steps. First use `pivot_longer()` to change our data set that has 90 rows and 3 columns that are named player, game, and points.

```{webr-r}
# insert code here
```

::: {.callout-tip collapse="true"}
## Solution
```{r}
blazer |>
  pivot_longer(
    cols = -player,
    names_to = "game",
    values_to = "points")
```
:::

What are the next steps we need to take to change our data set to recreate the plot above? 

::: {.callout-tip collapse="true"}
## Solution
We still need to: 

-   remove "game" text from the `game` column 
-   separate the numeric value of game from home/away 
-   create a location column
:::

Re-visit the documentation for `pivot_longer()`. Add the argument `names_prefix` to your existing code above to remove the text "game" from the `game` column. 

```{webr-r}
# insert code here
```

::: {.callout-tip collapse="true"}
## Solution
```{r}
blazer |>
  pivot_longer(
    cols = -player,
    names_to = "game",
    values_to = "points",
    names_prefix = "game"
  )
```
:::

We now need to separate the values away from the location in the `game` column. Please see the documentation on `separate_wider_delim` [here](https://tidyr.tidyverse.org/reference/separate_wider_delim.html). Add to your existing code to split the game number and game location into two columns. Call the new column `location`. Save and name this data set as `blazer_long` to be used in the next section. 

```{webr-r}
# insert code here
```

::: {.callout-tip collapse="true"}
## Solution
```{r}
blazer_long <- blazer |>
  pivot_longer(
    cols = -player,
    names_to = "game",
    values_to = "points",
    names_prefix = "game") |>
    separate_wider_delim(game, delim = "_", names = c("game", "location"))

blazer_long
```
:::

### Summary statistics 

Let's use the new `blazer_long` data set to calculate some summary statistics for the Portland Trailblazers to learn more about their performance for these 10 games! 

1. Calculate the mean points scored across all players between home and away games. 

```{webr-r}
# insert code here
```

::: {.callout-tip collapse="true"}
## Solution
```{r}
blazer_long |>
  group_by(location) |>
  summarize(mean_points = mean(points, na.rm = T))
```
:::

2. Now, calculate the mean points scored for the player `Damian Lillard` for both home and away games.

```{webr-r}
# insert code here
```


::: {.callout-tip collapse="true"}
## Solution
```{r}
blazer_long |>
  filter(player == "Damian Lillard") |>
  group_by(location) |>
  summarize(mean_points = mean(points, na.rm = T))
```
:::

3. Now, create a table that counts the number of times a player scored 15 points (or more) a game versus the number of times a player scored less than 15 points a game. 

```{webr-r}
# insert code here
```


::: {.callout-tip collapse="true"}
## Solution
```{r}
blazer_long |>
  mutate(points_cat = ifelse(points >= 15, "yes", "no")) |>
  select(points_cat) |>
  group_by(points_cat) |>
  count()
```
:::
## Bonus Challange 

Recreate the plot, using the `blazer_long` data set! 

![](images/blazer_pic.png){fig-align="center"}

Hints: The code you start with makes sure that game is appropriately treated as a quantitative variable. You will learn more about data types in the following lessons! The plot above uses `theme_bw()`. 
```{webr-r}
blazer_long |>
  mutate(game = as.numeric(game)) |>
  # insert code here
```

::: {.callout-tip collapse="true"}
## Solution
```{r}
blazer_long |>
  mutate(game = as.numeric(game)) |>
  ggplot(
    aes(x = game, y = points, color = location, group = player)
  ) +
  geom_line() +
  geom_point(shape = "square") +
  facet_wrap(~player) +
  scale_x_continuous(breaks = c(1:10)) +
  theme_bw() +
  labs(
    x = "Game",
    y = "Points Scored",
    title = "Points Scored Across 10 Games",
    subtitle = "Portland Trailblazers (2021-2022 Season)",
    caption = "https://www.basketball-reference.com/teams/POR/2021_games.html"
  )
```
:::

