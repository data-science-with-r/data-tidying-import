{
  "hash": "8b113dbd85d6deec7e24fbd8606d7232",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Joining data\"\nformat: revealjs\n---\n\n\n\n\n# Setup\n\n## Task, goal, and tools\n\n<br>\n\n::: hand\n{{< fa list-check >}} [have]{.hand-blue-medium} multiple data frames\n:::\n\n. . .\n\n::: hand\n{{< fa bullseye >}} [want]{.hand-pink-medium} to join them together\n:::\n\n. . .\n\n::: hand\n{{< fa screwdriver-wrench >}} [using]{.hand-yellow-medium} tools from the **tidyverse**\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n## Data: Women in science \n\nInformation on 10 women in science who changed the world:\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"xyauznezif\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#xyauznezif table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#xyauznezif thead, #xyauznezif tbody, #xyauznezif tfoot, #xyauznezif tr, #xyauznezif td, #xyauznezif th {\n  border-style: none;\n}\n\n#xyauznezif p {\n  margin: 0;\n  padding: 0;\n}\n\n#xyauznezif .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#xyauznezif .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#xyauznezif .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#xyauznezif .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#xyauznezif .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xyauznezif .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xyauznezif .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xyauznezif .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#xyauznezif .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#xyauznezif .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#xyauznezif .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#xyauznezif .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#xyauznezif .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#xyauznezif .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#xyauznezif .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#xyauznezif .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#xyauznezif .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#xyauznezif .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#xyauznezif .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xyauznezif .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#xyauznezif .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#xyauznezif .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#xyauznezif .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xyauznezif .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#xyauznezif .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#xyauznezif .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xyauznezif .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xyauznezif .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#xyauznezif .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xyauznezif .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#xyauznezif .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xyauznezif .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xyauznezif .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xyauznezif .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xyauznezif .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xyauznezif .gt_left {\n  text-align: left;\n}\n\n#xyauznezif .gt_center {\n  text-align: center;\n}\n\n#xyauznezif .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#xyauznezif .gt_font_normal {\n  font-weight: normal;\n}\n\n#xyauznezif .gt_font_bold {\n  font-weight: bold;\n}\n\n#xyauznezif .gt_font_italic {\n  font-style: italic;\n}\n\n#xyauznezif .gt_super {\n  font-size: 65%;\n}\n\n#xyauznezif .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#xyauznezif .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#xyauznezif .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#xyauznezif .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#xyauznezif .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#xyauznezif .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#xyauznezif .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#xyauznezif .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#xyauznezif div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-size: 24px;\" scope=\"col\" id=\"name\">name</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Ada Lovelace</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Marie Curie</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Janaki Ammal</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Chien-Shiung Wu</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Katherine Johnson</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Rosalind Franklin</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Vera Rubin</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Gladys West</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Flossie Wong-Staal</td></tr>\n    <tr><td headers=\"name\" class=\"gt_row gt_left\" style=\"font-size: 24px;\">Jennifer Doudna</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n::: aside\nSource: [Discover Magazine](https://www.discovermagazine.com/the-sciences/meet-10-women-in-science-who-changed-the-world)\n:::\n\n## Input 1: `professions`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 2\n   name               profession                        \n   <chr>              <chr>                             \n 1 Ada Lovelace       Mathematician                     \n 2 Marie Curie        Physicist and Chemist             \n 3 Janaki Ammal       Botanist                          \n 4 Chien-Shiung Wu    Physicist                         \n 5 Katherine Johnson  Mathematician                     \n 6 Rosalind Franklin  Chemist                           \n 7 Vera Rubin         Astronomer                        \n 8 Gladys West        Mathematician                     \n 9 Flossie Wong-Staal Virologist and Molecular Biologist\n10 Jennifer Doudna    Biochemist                        \n```\n\n\n:::\n:::\n\n\n\n\n## Input 2: `dates`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndates\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n  name               birth_year death_year\n  <chr>                   <dbl>      <dbl>\n1 Janaki Ammal             1897       1984\n2 Chien-Shiung Wu          1912       1997\n3 Katherine Johnson        1918       2020\n4 Rosalind Franklin        1920       1958\n5 Vera Rubin               1928       2016\n6 Gladys West              1930         NA\n7 Flossie Wong-Staal       1947       2020\n8 Jennifer Doudna          1964         NA\n```\n\n\n:::\n:::\n\n\n\n\n## Input 3: `works`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworks\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 2\n  name               known_for                              \n  <chr>              <chr>                                  \n1 Ada Lovelace       first computer algorithm               \n2 Marie Curie        theory of radioactivity,  discovery of…\n3 Janaki Ammal       hybrid species, biodiversity protection\n4 Chien-Shiung Wu    confim and refine theory of radioactiv…\n5 Katherine Johnson  calculations of orbital mechanics crit…\n6 Vera Rubin         existence of dark matter               \n7 Gladys West        mathematical modeling of the shape of …\n8 Flossie Wong-Staal first scientist to clone HIV and creat…\n9 Jennifer Doudna    one of the primary developers of CRISP…\n```\n\n\n:::\n:::\n\n\n\n\n## Desired output\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   name           profession birth_year death_year known_for\n   <chr>          <chr>           <dbl>      <dbl> <chr>    \n 1 Ada Lovelace   Mathemati…         NA         NA first co…\n 2 Marie Curie    Physicist…         NA         NA theory o…\n 3 Janaki Ammal   Botanist         1897       1984 hybrid s…\n 4 Chien-Shiung … Physicist        1912       1997 confim a…\n 5 Katherine Joh… Mathemati…       1918       2020 calculat…\n 6 Rosalind Fran… Chemist          1920       1958 <NA>     \n 7 Vera Rubin     Astronomer       1928       2016 existenc…\n 8 Gladys West    Mathemati…       1930         NA mathemat…\n 9 Flossie Wong-… Virologis…       1947       2020 first sc…\n10 Jennifer Doud… Biochemist       1964         NA one of t…\n```\n\n\n:::\n:::\n\n\n\n\n## Inputs, reminder\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(professions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"name\"       \"profession\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(professions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n:::\n\n\n\n\n. . .\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"name\"       \"birth_year\" \"death_year\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n\n\n\n. . .\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"name\"      \"known_for\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(works)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n:::\n\n\n\n\n# Joining data frames\n\n## Joining data frames\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsomething_join(x, y)\n```\n:::\n\n\n\n\n- `left_join()`: all rows from x\n- `right_join()`: all rows from y\n- `full_join()`: all rows from both x and y\n- `semi_join()`: all rows from x where there are matching values in y, keeping just columns from x\n- `inner_join()`: all rows from x where there are matching values in y, return \nall combination of multiple matches in the case of multiple matches\n- `anti_join()`: return all rows from x where there are not matching values in y, never duplicate rows of x\n- ...\n\n## Setup\n\nFor the next few slides...\n\n:::: {.columns}\n\n::: {.column width=\"35%\" .fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- tibble(\n  id = c(1, 2, 3),\n  value_x = c(\"x1\", \"x2\", \"x3\")\n  )\n\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\" .fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- tibble(\n  id = c(1, 2, 4),\n  value_y = c(\"y1\", \"y2\", \"y4\")\n  )\n\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n     id value_y\n  <dbl> <chr>  \n1     1 y1     \n2     2 y2     \n3     4 y4     \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::::\n\n## `left_join()`\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(x, y)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(id)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\"}\n![](images/left-join.gif)\n:::\n\n::::\n\n## `left_join()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions |>\n  left_join(dates)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   name               profession       birth_year death_year\n   <chr>              <chr>                 <dbl>      <dbl>\n 1 Ada Lovelace       Mathematician            NA         NA\n 2 Marie Curie        Physicist and C…         NA         NA\n 3 Janaki Ammal       Botanist               1897       1984\n 4 Chien-Shiung Wu    Physicist              1912       1997\n 5 Katherine Johnson  Mathematician          1918       2020\n 6 Rosalind Franklin  Chemist                1920       1958\n 7 Vera Rubin         Astronomer             1928       2016\n 8 Gladys West        Mathematician          1930         NA\n 9 Flossie Wong-Staal Virologist and …       1947       2020\n10 Jennifer Doudna    Biochemist             1964         NA\n```\n\n\n:::\n:::\n\n\n\n\n## `right_join()`\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nright_join(x, y)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(id)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\"}\n![](images/right-join.gif)\n:::\n\n::::\n\n## `left_join()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions |>\n  right_join(dates)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n  name               profession        birth_year death_year\n  <chr>              <chr>                  <dbl>      <dbl>\n1 Janaki Ammal       Botanist                1897       1984\n2 Chien-Shiung Wu    Physicist               1912       1997\n3 Katherine Johnson  Mathematician           1918       2020\n4 Rosalind Franklin  Chemist                 1920       1958\n5 Vera Rubin         Astronomer              1928       2016\n6 Gladys West        Mathematician           1930         NA\n7 Flossie Wong-Staal Virologist and M…       1947       2020\n8 Jennifer Doudna    Biochemist              1964         NA\n```\n\n\n:::\n:::\n\n\n\n\n## `full_join()`\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join(x, y)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(id)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      <NA>   \n4     4 <NA>    y4     \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\"}\n![](images/full-join.gif)\n:::\n\n::::\n\n## `left_join()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions |>\n  full_join(dates)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   name               profession       birth_year death_year\n   <chr>              <chr>                 <dbl>      <dbl>\n 1 Ada Lovelace       Mathematician            NA         NA\n 2 Marie Curie        Physicist and C…         NA         NA\n 3 Janaki Ammal       Botanist               1897       1984\n 4 Chien-Shiung Wu    Physicist              1912       1997\n 5 Katherine Johnson  Mathematician          1918       2020\n 6 Rosalind Franklin  Chemist                1920       1958\n 7 Vera Rubin         Astronomer             1928       2016\n 8 Gladys West        Mathematician          1930         NA\n 9 Flossie Wong-Staal Virologist and …       1947       2020\n10 Jennifer Doudna    Biochemist             1964         NA\n```\n\n\n:::\n:::\n\n\n\n\n\n## `inner_join()`\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninner_join(x, y)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(id)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n     id value_x value_y\n  <dbl> <chr>   <chr>  \n1     1 x1      y1     \n2     2 x2      y2     \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\"}\n![](images/inner-join.gif)\n:::\n\n::::\n\n## `inner_join()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions |>\n  inner_join(dates)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 4\n  name               profession        birth_year death_year\n  <chr>              <chr>                  <dbl>      <dbl>\n1 Janaki Ammal       Botanist                1897       1984\n2 Chien-Shiung Wu    Physicist               1912       1997\n3 Katherine Johnson  Mathematician           1918       2020\n4 Rosalind Franklin  Chemist                 1920       1958\n5 Vera Rubin         Astronomer              1928       2016\n6 Gladys West        Mathematician           1930         NA\n7 Flossie Wong-Staal Virologist and M…       1947       2020\n8 Jennifer Doudna    Biochemist              1964         NA\n```\n\n\n:::\n:::\n\n\n\n\n\n## `semi_join()`\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsemi_join(x, y)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(id)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n     id value_x\n  <dbl> <chr>  \n1     1 x1     \n2     2 x2     \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\"}\n![](images/semi-join.gif)\n:::\n\n::::\n\n## `semi_join()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions |>\n  semi_join(dates)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 2\n  name               profession                        \n  <chr>              <chr>                             \n1 Janaki Ammal       Botanist                          \n2 Chien-Shiung Wu    Physicist                         \n3 Katherine Johnson  Mathematician                     \n4 Rosalind Franklin  Chemist                           \n5 Vera Rubin         Astronomer                        \n6 Gladys West        Mathematician                     \n7 Flossie Wong-Staal Virologist and Molecular Biologist\n8 Jennifer Doudna    Biochemist                        \n```\n\n\n:::\n:::\n\n\n\n\n## `anti_join()`\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanti_join(x, y)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(id)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n     id value_x\n  <dbl> <chr>  \n1     3 x3     \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\"}\n![](images/anti-join.gif)\n:::\n\n::::\n\n## `anti_join()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions |>\n  anti_join(dates)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  name         profession           \n  <chr>        <chr>                \n1 Ada Lovelace Mathematician        \n2 Marie Curie  Physicist and Chemist\n```\n\n\n:::\n:::\n\n\n\n\n## Putting it altogether\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprofessions |>\n  left_join(dates) |>\n  left_join(works)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(name)`\nJoining with `by = join_by(name)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   name           profession birth_year death_year known_for\n   <chr>          <chr>           <dbl>      <dbl> <chr>    \n 1 Ada Lovelace   Mathemati…         NA         NA first co…\n 2 Marie Curie    Physicist…         NA         NA theory o…\n 3 Janaki Ammal   Botanist         1897       1984 hybrid s…\n 4 Chien-Shiung … Physicist        1912       1997 confim a…\n 5 Katherine Joh… Mathemati…       1918       2020 calculat…\n 6 Rosalind Fran… Chemist          1920       1958 <NA>     \n 7 Vera Rubin     Astronomer       1928       2016 existenc…\n 8 Gladys West    Mathemati…       1930         NA mathemat…\n 9 Flossie Wong-… Virologis…       1947       2020 first sc…\n10 Jennifer Doud… Biochemist       1964         NA one of t…\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}