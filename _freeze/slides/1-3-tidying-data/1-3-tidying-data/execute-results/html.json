{
  "hash": "b9679dd69c0dab7227b56ba522229b71",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidying data\"\nformat: revealjs\n---\n\n\n\n\n\n# Setup\n\n## Task and goal\n\n::: hand\nWe...\n\n[have]{.hand-blue-medium} data organised in an unideal way for our analysis\n\n[want]{.hand-pink-medium} to reorganize the data to carry on with our analysis\n:::\n\n## Data: Sales\n\n\n\n\n\n\n\n::: columns\n::: {.column width=\"35%\"}\n[have]{.hand-blue-medium}\n\n::: medium\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  customer_id item_1 item_2       item_3\n        <dbl> <chr>  <chr>        <chr> \n1           1 bread  milk         banana\n2           2 milk   toilet paper <NA>  \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n::: {.column width=\"35%\"}\n[want]{.hand-pink-medium}\n\n::: medium\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  customer_id item_no item        \n        <dbl> <chr>   <chr>       \n1           1 item_1  bread       \n2           1 item_2  milk        \n3           1 item_3  banana      \n4           2 item_1  milk        \n5           2 item_2  toilet paper\n6           2 item_3  <NA>        \n```\n\n\n:::\n:::\n\n\n:::\n:::\n:::\n\n## Grammar of data tidying\n\n::: columns\n::: {.column width=\"30%\"}\n![](images/tidyr-part-of-tidyverse.png){fig-alt=\"tidyr is part of the tidyverse\"}\n:::\n\n::: {.column width=\"40%\"}\nThe goal of **tidyr** is to help you tidy your data via\n\n::: incremental\n-   pivoting for going between wide and long data\n-   splitting and combining character columns\n-   nesting and unnesting columns\n-   clarifying how `NA`s should be treated\n:::\n:::\n:::\n\n# Pivoting data\n\n## Pivoting\n\n::: columns\n::: {.column width=\"40%\"}\nNot this...\n\n![](images/pivot.gif){width=\"500\"}\n:::\n\n::: {.column .fragment width=\"30%\"}\nbut this!\n\n![](images/tidyr-longer-wider.gif)\n:::\n:::\n\n## Wider vs. longer {.smaller}\n\n::: columns\n::: {.column width=\"35%\"}\n[wider]{.hand-blue-medium} - more columns\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 4\n  customer_id item_1 item_2       item_3\n        <dbl> <chr>  <chr>        <chr> \n1           1 bread  milk         banana\n2           2 milk   toilet paper <NA>  \n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"35%\"}\n[longer]{.hand-pink-medium} - more rows\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  customer_id item_no item        \n        <dbl> <chr>   <chr>       \n1           1 item_1  bread       \n2           1 item_2  milk        \n3           1 item_3  banana      \n4           2 item_1  milk        \n5           2 item_2  toilet paper\n6           2 item_3  <NA>        \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## `pivot_longer()`\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivot_longer(\n  data |> # <1>\n  cols, \n  names_to = \"name\", \n  values_to = \"value\"\n  )\n```\n:::\n\n\n\n1.  `data` (as usual)\n:::\n:::\n\n## `pivot_longer()`\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivot_longer(\n  data |> # <1>\n  cols,   # <2>\n  names_to = \"name\", \n  values_to = \"value\"\n  )\n```\n:::\n\n\n\n1.  `data` (as usual)\n2.  `cols`: columns to pivot into longer format\n:::\n:::\n\n## `pivot_longer()`\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivot_longer(\n  data |> # <1>\n  cols,   # <2>\n  names_to = \"name\", # <3>\n  values_to = \"value\"\n  )\n```\n:::\n\n\n\n1.  `data` (as usual)\n2.  `cols`: columns to pivot into longer format\n3.  `names_to`: name of the column where column names of pivoted variables go (character string)\n:::\n:::\n\n## `pivot_longer()`\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivot_longer(\n  data |> # <1>\n  cols,   # <2>\n  names_to = \"name\", # <3>\n  values_to = \"value\" # <4>\n  )\n```\n:::\n\n\n\n1.  `data` (as usual)\n2.  `cols`: columns to pivot into longer format\n3.  `names_to`: name of the column where column names of pivoted variables go (character string)\n4.  `values_to`: name of the column where data in pivoted variables go (character string)\n:::\n:::\n\n## Customers $\\rightarrow$ purchases\n\n::: columns\n::: {.column width=\"60%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|3|4|5\"}\npurchases <- customers |>\n  pivot_longer(\n    cols = item_1:item_3, #<1>\n    names_to = \"item_no\", #<2>\n    values_to = \"item\"    #<3>\n  )\n```\n:::\n\n\n\n1.  `cols` to pivot: `item_1` to `item_3`\n2.  Column `names_to` new column called `item_no`\n3.  `values_to` new column called `item`\n:::\n:::\n\n## Customers $\\rightarrow$ purchases\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurchases <- customers |>\n  pivot_longer(\n    cols = item_1:item_3,\n    names_to = \"item_no\",\n    values_to = \"item\"   \n  )\n\npurchases\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  customer_id item_no item        \n        <dbl> <chr>   <chr>       \n1           1 item_1  bread       \n2           1 item_2  milk        \n3           1 item_3  banana      \n4           2 item_1  milk        \n5           2 item_2  toilet paper\n6           2 item_3  <NA>        \n```\n\n\n:::\n:::\n\n\n:::\n:::\n\n## Why pivot?\n\nMost likely, because the next step of your analysis needs it\n\n. . .\n\n::: medium\n::: columns\n::: {.column width=\"35%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprices\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  item         price\n  <chr>        <dbl>\n1 avocado       0.5 \n2 banana        0.15\n3 bread         1   \n4 milk          0.8 \n5 toilet paper  3   \n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"35%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurchases |>\n  left_join(prices)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(item)`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  customer_id item_no item         price\n        <dbl> <chr>   <chr>        <dbl>\n1           1 item_1  bread         1   \n2           1 item_2  milk          0.8 \n3           1 item_3  banana        0.15\n4           2 item_1  milk          0.8 \n5           2 item_2  toilet paper  3   \n6           2 item_3  <NA>         NA   \n```\n\n\n:::\n:::\n\n\n:::\n:::\n:::\n\n## Purchases $\\rightarrow$ customers\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1|2,5|3|4\"}\ncustomers <- purchases |> # <1>\n  pivot_wider(            # <2>\n    names_from = item_no, # <3>\n    values_from = item    # <4>\n  )\n```\n:::\n\n\n\n1.  `data` (as usual)\n2.  `pivot_wider()`: Function to pivot wider\n3.  `names_from`: Which column in the long format contains the what should be column names in the wide format\n4.  `values_from`: Which column in the long format contains the what should be values in the new columns in the wide format\n:::\n:::\n\n# Case study: <br>Approval rating of Joe Biden\n\n## Inspiration\n\n![](images/biden-approval.png){fig-alt=\"Approval rating of Joe Biden since the beginning of his term until July 2024.\"}\n\n::: aside\nSource: [FiveThirtyEight](https://projects.fivethirtyeight.com/polls/approval/joe-biden/)\n:::\n\n## Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbiden <- read_csv(\"data/biden/biden.csv\")\nbiden\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 504 × 5\n   pollster population       date       approval disapproval\n   <chr>    <chr>            <date>        <dbl>       <dbl>\n 1 YouGov   All adults       2024-07-16       37          59\n 2 YouGov   Registered vote… 2024-07-16       40          58\n 3 YouGov   All adults       2024-07-09       37          58\n 4 YouGov   Registered vote… 2024-07-09       40          58\n 5 YouGov   All adults       2024-07-02       37          57\n 6 YouGov   Registered vote… 2024-07-02       40          57\n 7 YouGov   All adults       2024-07-01       38          57\n 8 YouGov   Registered vote… 2024-07-01       41          58\n 9 YouGov   All adults       2024-06-25       36          58\n10 YouGov   Registered vote… 2024-06-25       41          57\n# ℹ 494 more rows\n```\n\n\n:::\n:::\n\n\n\n## Goal\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](1-3-tidying-data_files/figure-revealjs/unnamed-chunk-17-1.png){width=90%}\n:::\n:::\n\n\n\n::: columns\n::: {.column .fragment width=\"30%\"}\n**Aesthetic mappings:**\n\n✅ x = `date`\n\n❌ y = `rating_value`\n\n❌ color = `rating_type`\n:::\n\n::: {.column .fragment width=\"40%\"}\n**Facet:**\n\n✅ `population` (Adults and Voters)\n:::\n:::\n\n## Pivot\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|1|2,6|3|4|5|8\"}\nbiden_longer <- biden |>\n  pivot_longer(\n    cols = c(approval, disapproval),\n    names_to = \"rating_type\",\n    values_to = \"rating_value\"\n  )\n\nbiden_longer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,008 × 5\n   pollster population   date       rating_type rating_value\n   <chr>    <chr>        <date>     <chr>              <dbl>\n 1 YouGov   All adults   2024-07-16 approval              37\n 2 YouGov   All adults   2024-07-16 disapproval           59\n 3 YouGov   Registered … 2024-07-16 approval              40\n 4 YouGov   Registered … 2024-07-16 disapproval           58\n 5 YouGov   All adults   2024-07-09 approval              37\n 6 YouGov   All adults   2024-07-09 disapproval           58\n 7 YouGov   Registered … 2024-07-09 approval              40\n 8 YouGov   Registered … 2024-07-09 disapproval           58\n 9 YouGov   All adults   2024-07-02 approval              37\n10 YouGov   All adults   2024-07-02 disapproval           57\n# ℹ 998 more rows\n```\n\n\n:::\n:::\n\n\n\n## Plot {.smaller}\n\n::: columns\n::: {.column width=\"28%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  biden_longer, \n  aes(\n    x = date, \n    y = rating_value, \n    color = rating_type\n    )\n  ) +\n  geom_line() +\n  facet_wrap(~ population)\n```\n:::\n\n\n:::\n\n::: {.column width=\"42%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](1-3-tidying-data_files/figure-revealjs/unnamed-chunk-20-1.png){width=576}\n:::\n:::\n\n\n:::\n:::\n\n## Colors\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n  biden_longer, \n  aes(x = date, y = rating_value, color = rating_type)\n  ) +\n  geom_line() +\n  facet_wrap(~ population) +\n  scale_color_manual(values = c(\"darkgreen\", \"deeppink\"))\n```\n\n::: {.cell-output-display}\n![](1-3-tidying-data_files/figure-revealjs/unnamed-chunk-21-1.png){width=100%}\n:::\n:::\n\n\n\n## y-axis labels\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(\n  biden_longer, \n  aes(x = date, y = rating_value, color = rating_type)\n  ) +\n  geom_line() +\n  facet_wrap(~ population) +\n  scale_color_manual(values = c(\"darkgreen\", \"deeppink\")) +\n  scale_y_continuous(labels = label_percent(scale = 1))\n```\n\n::: {.cell-output-display}\n![](1-3-tidying-data_files/figure-revealjs/unnamed-chunk-22-1.png){width=100%}\n:::\n:::\n\n\n\n## x-axis labels\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(\n  biden_longer, \n  aes(x = date, y = rating_value, color = rating_type)\n  ) +\n  geom_line() +\n  facet_wrap(~ population) +\n  scale_color_manual(values = c(\"darkgreen\", \"deeppink\")) +\n  scale_y_continuous(labels = label_percent(scale = 1)) +\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%b %e, %Y\")\n```\n\n::: {.cell-output-display}\n![](1-3-tidying-data_files/figure-revealjs/unnamed-chunk-23-1.png){width=100%}\n:::\n:::\n\n\n\n## Plot labels {.smaller}\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"10-17\"}\nggplot(\n  biden_longer, \n  aes(x = date, y = rating_value, color = rating_type)\n  ) +\n  geom_line() +\n  facet_wrap(~ population) +\n  scale_color_manual(values = c(\"darkgreen\", \"deeppink\")) +\n  scale_y_continuous(labels = label_percent(scale = 1)) +\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%b %e, %Y\") +\n  labs(\n    x = \"Date\",\n    y = \"Rating\",\n    color = NULL,\n    title = \"How popular is Joe Biden?\",\n    subtitle = \"Estimates based on polls of all adults and polls of registered voters\",\n    caption = \"Source: FiveThirtyEight\"\n  )\n```\n\n::: {.cell-output-display}\n![](1-3-tidying-data_files/figure-revealjs/unnamed-chunk-24-1.png){width=100%}\n:::\n:::\n\n\n\n## Theming {.smaller}\n\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code  code-line-numbers=\"18-19\"}\nggplot(\n  biden_longer, \n  aes(x = date, y = rating_value, color = rating_type)\n  ) +\n  geom_line() +\n  facet_wrap(~ population) +\n  scale_color_manual(values = c(\"darkgreen\", \"deeppink\")) +\n  scale_y_continuous(labels = label_percent(scale = 1)) +\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%b %e, %Y\") +\n  labs(\n    x = \"Date\",\n    y = \"Rating\",\n    color = NULL,\n    title = \"How popular is Joe Biden?\",\n    subtitle = \"Estimates based on polls of all adults and polls of registered voters\",\n    caption = \"Source: FiveThirtyEight\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](1-3-tidying-data_files/figure-revealjs/unnamed-chunk-25-1.png){width=100%}\n:::\n:::\n",
    "supporting": [
      "1-3-tidying-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}