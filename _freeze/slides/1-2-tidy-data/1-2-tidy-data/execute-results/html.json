{
  "hash": "6b26b0beb1bb65348598ade3dccb1395",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy data\"\nformat: revealjs\n---\n\n\n\n\n\n## Tidy data\n\n>Happy families are all alike; every unhappy family is unhappy in its own way. \n>\n>Leo Tolstoy\n\n::: {.columns}\n\n::: {.column width=\"40%\"}\n**Characteristics of tidy data:**\n\n- Each variable forms a column.\n- Each observation forms a row.\n- Each type of observational unit forms a table.\n:::\n\n::: {.column width=\"40%\"}\n**Characteristics of untidy data:**\n\n!@#$%^&*()\n:::\n\n:::\n\n## What makes this data not tidy?\n\n![](images/hyperwar-airplanes-on-hand.png){fig-alt=\"WW2 Army Air Force combat aircraft\"}\n\n::: aside\nSource: [Army Air Forces Statistical Digest, WW II](https://www.ibiblio.org/hyperwar/AAF/StatDigest/aafsd-3.html)\n:::\n\n## What makes this data not tidy?\n\n![](images/hiv-est-prevalence-15-49.png){fig-alt=\"Estimated HIV prevalence among 15-49 year olds\"}\n\n::: aside\nSource: [Gapminder, Estimated HIV prevalence among 15-49 year olds](https://www.gapminder.org/data)\n:::\n\n## What makes this data not tidy?\n\n![](images/us-general-economic-characteristic-acs-2017.png){fig-alt=\"US General Economic Characteristics, ACS 2017\"}\n\n::: aside\nSource: [US Census Fact Finder, General Economic Characteristics, ACS 2017](https://factfinder.census.gov/faces/tableservices/jsf/pages/productview.xhtml?pid=ACS_17_5YR_DP03&src=pt)\n:::\n\n## What makes data tidy?\n\n> “Tidy datasets are easy to manipulate, model and visualise, and have a specific structure: each variable is a column, each observation is a row, and each type of observational unit is a table.”\n\n. . .\n\n::: callout-note\n“easy to manipulate” = “straightforward to manipulate”\n:::\n\n::: aside\nWickham, H. (2014). [Tidy data](https://www.jstatsoft.org/article/view/v059i10). Journal of statistical software, 59, 1-23.\n:::\n\n\n## Displaying vs. summarizing data\n\n::: {.columns}\n\n::: {.column}\n**Display**\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 87 × 3\n   name               height  mass\n   <chr>               <int> <dbl>\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun Lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column}\n**Summarize**\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  gender    avg_ht\n  <chr>      <dbl>\n1 feminine    167.\n2 masculine   177.\n3 <NA>        175 \n```\n\n\n:::\n:::\n\n\n:::\n\n:::\n\n## Displaying vs. summarizing data\n\n::: {.columns}\n\n::: {.column width=\"45%\"}\n**Display**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |>\n  select(name, height, mass)\n```\n:::\n\n\n:::\n\n::: {.column width=\"55%\"}\n**Summarize**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |>\n  group_by(gender) |>\n  summarize(\n    avg_ht = mean(height, na.rm = TRUE)\n  )\n```\n:::\n\n\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}