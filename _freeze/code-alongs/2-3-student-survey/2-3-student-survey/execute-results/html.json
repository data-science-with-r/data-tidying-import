{
  "hash": "23c7b415f0ddecdc0c2b0368a38b9cc7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Student survey\"\n---\n\n\n\n# Introduction\n\nIn this code along we'll work with a small but pretty \"messy\" survey data on favorite foods and some other information on school aged children.\n\n## Packages\n\nWe will use the **tidyverse** for our analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n## Data\n\nThe data are synthetic, so we ca make a few important points quickly.\n\n# Analysis\n\n-   Read the data in and inspect it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstudents_raw <- read_csv(\"https://data-science-with-r.github.io/data/students-raw.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 6 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): Full Name, favourite.food, mealPlan, AGE\ndbl (1): Student ID\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nstudents_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  `Student ID` `Full Name`      favourite.food     mealPlan            AGE  \n         <dbl> <chr>            <chr>              <chr>               <chr>\n1            1 Sunil Huffmann   Strawberry yoghurt Lunch only          4    \n2            2 Barclay Lynn     French fries       Lunch only          5    \n3            3 Jayendra Lyne    N/A                Breakfast and lunch 7    \n4            4 Leon Rossini     Anchovies          Lunch only          <NA> \n5            5 Chidiegwu Dunkel Pizza              Breakfast and lunch five \n6            6 Güvenç Attila    Ice cream          Lunch only          6    \n```\n\n\n:::\n:::\n\n\n\n-   Fix the variable names.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Handle NAs.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Inspect variable types and apply fixes where appropriate.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Inspect variable classes and apply fixes where appropriate. Save the resulting data frame as `students`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Write out the `students` object to a CSV file in the data folder of your working directory.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Read in the newly created `students.csv` and inspect the variable types and classes. Do you observe anything unexpected?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Write out the `students` object to an RDS file in the data folder of your working directory.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\n\n-   Read in the newly created `students.rds` and inspect the variable types and classes. How is this result different than the CSV file you read in?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}