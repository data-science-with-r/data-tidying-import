[
  {
    "objectID": "exercises/tidy_basketball.html",
    "href": "exercises/tidy_basketball.html",
    "title": "Tidy Basketball",
    "section": "",
    "text": "Important\n\n\n\nPlease reference the Meet the toolkit: Programming exercises in course 1 (or refresher) for information and instructions on how to interact with the programming exercise below."
  },
  {
    "objectID": "exercises/tidy_basketball.html#getting-started",
    "href": "exercises/tidy_basketball.html#getting-started",
    "title": "Tidy Basketball",
    "section": "Getting Started",
    "text": "Getting Started\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe Portland Trailblazers are a National Basketball Association (NBA) sports team. In this mini analysis, we will work with a dataset that has informatino of the points scored by 9 Portland Trailblazers players across the first 10 games of the 2021-2022 NBA season. If you would like to become more familiar with the game of basketball, please click here. If you would like more information on the Portland Trailblazers, please click here.\nA key to these data can be found below:\n\n\n\nvariable name\ndescription\n\n\n\n\nplayer\nname of player\n\n\ngame1_home\npoints scored on game 1 on home court\n\n\n…\n…\n\n\ngame3_away\npoints scored on game 3 on away court\n\n\n…\n…\n\n\ngame10_home\npoints scored on game 10 on home court\n\n\n\nRead in the data below.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPackages\nWe’ll use tidyverse for the majority of the analysis and scales for pretty plot labels later on.\n\nlibrary(tidyverse)\nlibrary(scales)\n\n\n\nGet to know the data\nUse glimpse() to get an overview (or “glimpse”) of the data. How many rows and columns are in this dataset? In addition, make note of the types of variables you are working with.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nWarning\n\n\n\nIf you receive the error Error: object ‘blazer’ not found, go back and read in your data above.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nglimpse(blazer)\n\nRows: 9\nColumns: 11\n$ player      &lt;chr&gt; \"Damian Lillard\", \"CJ McCollum\", \"Norman Powell\", \"Robert …\n$ game1_home  &lt;dbl&gt; 20, 24, 14, 8, 20, 5, 11, 2, 7\n$ game2_home  &lt;dbl&gt; 19, 28, 16, 6, 9, 5, 18, 8, 11\n$ game3_away  &lt;dbl&gt; 12, 20, NA, 0, 4, 8, 12, 5, 5\n$ game4_home  &lt;dbl&gt; 20, 25, NA, 3, 17, 10, 17, 8, 9\n$ game5_home  &lt;dbl&gt; 25, 14, 12, 9, 14, 9, 5, 3, 8\n$ game6_away  &lt;dbl&gt; 14, 25, 14, 6, 13, 6, 19, 8, 8\n$ game7_away  &lt;dbl&gt; 20, 20, 22, 0, 7, 0, 17, 7, 4\n$ game8_away  &lt;dbl&gt; 26, 21, 23, 6, 6, 7, 15, 0, 0\n$ game9_home  &lt;dbl&gt; 4, 27, 25, 19, 10, 0, 16, 2, 7\n$ game10_home &lt;dbl&gt; 25, 7, 13, 12, 15, 6, 10, 4, 8\n\n\nThere are 9 rows and 11 columns in blazer dataset.\nplayer is a character variable; the remaining variables are doubles.\n\n\n\nSuppose you are asked to recreate the plot below…\n\n\n\n\n\nIdentify the variables you would need to use to recreate this plot. Can this plot be recreated with how your blazer dataset current format?\n\n\n\n\n\n\nSolution\n\n\n\n\n\nVariables in the above plot include player, game, location, and points. This plot can not be recreated with how the blazer dataset is currently formatted.\n\n\n\nNow, think critically about how we could transform our blazer dataset to have the variables necessary to make the plot above. What would our new dataset have to look like? What R function(s) could we use to transform our data into what we need?\n\n\n\n\n\n\nSolution\n\n\n\n\n\nWe have a player column in the dataset. In order to get a game, location, and points, we can use pivot_longer(), which will take this wide dataset and make it into a longer dataset. That is, we can bring the variable names of game1_home, game2_home, etc. into our dataset as values, which is needed to recreate the plot above.\n\n\n\nSee more information about pivot_longer() here. We are going to create our final dataset in steps. First use pivot_longer() to change our dataset that has 90 rows and 3 columns that are named player, game, and points.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nblazer |&gt;\n  pivot_longer(\n    cols = -player,\n    names_to = \"game\",\n    values_to = \"points\")\n\n# A tibble: 90 × 3\n   player         game        points\n   &lt;chr&gt;          &lt;chr&gt;        &lt;dbl&gt;\n 1 Damian Lillard game1_home      20\n 2 Damian Lillard game2_home      19\n 3 Damian Lillard game3_away      12\n 4 Damian Lillard game4_home      20\n 5 Damian Lillard game5_home      25\n 6 Damian Lillard game6_away      14\n 7 Damian Lillard game7_away      20\n 8 Damian Lillard game8_away      26\n 9 Damian Lillard game9_home       4\n10 Damian Lillard game10_home     25\n# ℹ 80 more rows\n\n\n\n\n\nWhat are the next steps we need to take to change our dataset to recreate the plot above?\n\n\n\n\n\n\nSolution\n\n\n\n\n\nWe still need to:\n\nremove “game” text from the game column\nseparate the numeric value of game from home/away\ncreate a location column\n\n\n\n\nRe-visit the documentation for pivot_longer(). Add the argument names_prefix to your existing code above to remove the text “game” from the game column.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nblazer |&gt;\n  pivot_longer(\n    cols = -player,\n    names_to = \"game\",\n    values_to = \"points\",\n    names_prefix = \"game\"\n  )\n\n# A tibble: 90 × 3\n   player         game    points\n   &lt;chr&gt;          &lt;chr&gt;    &lt;dbl&gt;\n 1 Damian Lillard 1_home      20\n 2 Damian Lillard 2_home      19\n 3 Damian Lillard 3_away      12\n 4 Damian Lillard 4_home      20\n 5 Damian Lillard 5_home      25\n 6 Damian Lillard 6_away      14\n 7 Damian Lillard 7_away      20\n 8 Damian Lillard 8_away      26\n 9 Damian Lillard 9_home       4\n10 Damian Lillard 10_home     25\n# ℹ 80 more rows\n\n\n\n\n\nWe now need to separate the values away from the location in the game column. Please see the documentation on separate_wider_delim here. Add to your existing code to split the game number and game location into two columns. Call the new column location. Save and name this dataset as blazer_long to be used in the next section.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nblazer_long &lt;- blazer |&gt;\n  pivot_longer(\n    cols = -player,\n    names_to = \"game\",\n    values_to = \"points\",\n    names_prefix = \"game\") |&gt;\n    separate_wider_delim(game, delim = \"_\", names = c(\"game\", \"location\"))\n\nblazer_long\n\n# A tibble: 90 × 4\n   player         game  location points\n   &lt;chr&gt;          &lt;chr&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1 Damian Lillard 1     home         20\n 2 Damian Lillard 2     home         19\n 3 Damian Lillard 3     away         12\n 4 Damian Lillard 4     home         20\n 5 Damian Lillard 5     home         25\n 6 Damian Lillard 6     away         14\n 7 Damian Lillard 7     away         20\n 8 Damian Lillard 8     away         26\n 9 Damian Lillard 9     home          4\n10 Damian Lillard 10    home         25\n# ℹ 80 more rows\n\n\n\n\n\n\n\nSummary statistics\nLet’s use the new blazer_long dataset to calculate some summary statistics for the Portland Trailblazers to learn more about their performance for these 10 games!\n\nCalculate the mean points scored across all players between home and away games.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nblazer_long |&gt;\n  group_by(location) |&gt;\n  summarize(mean_points = mean(points, na.rm = T))\n\n# A tibble: 2 × 2\n  location mean_points\n  &lt;chr&gt;          &lt;dbl&gt;\n1 away            10.9\n2 home            12.2\n\n\n\n\n\n\nNow, calculate the mean points scored for the player Damian Lillard for both home and away games.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nblazer_long |&gt;\n  filter(player == \"Damian Lillard\") |&gt;\n  group_by(location) |&gt;\n  summarize(mean_points = mean(points, na.rm = T))\n\n# A tibble: 2 × 2\n  location mean_points\n  &lt;chr&gt;          &lt;dbl&gt;\n1 away            18  \n2 home            18.8\n\n\n\n\n\n\nNow, create a table that counts the number of times a player scored 15 points (or more) a game versus the number of times a player scored less than 15 points a game.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nblazer_long |&gt;\n  mutate(points_cat = ifelse(points &gt;= 15, \"yes\", \"no\")) |&gt;\n  select(points_cat) |&gt;\n  group_by(points_cat) |&gt;\n  count()\n\n# A tibble: 3 × 2\n# Groups:   points_cat [3]\n  points_cat     n\n  &lt;chr&gt;      &lt;int&gt;\n1 no            59\n2 yes           29\n3 &lt;NA&gt;           2"
  },
  {
    "objectID": "exercises/tidy_basketball.html#bonus-challange",
    "href": "exercises/tidy_basketball.html#bonus-challange",
    "title": "Tidy Basketball",
    "section": "Bonus Challange",
    "text": "Bonus Challange\nRecreate the plot, using the blazer_long dataset!\n\n\n\n\n\nHints: The code you start with makes sure that game is appropriately treated as a quantitative variable. You will learn more about data types in the following lessons! The plot above uses theme_bw().\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nblazer_long |&gt;\n  mutate(game = as.numeric(game)) |&gt;\n  ggplot(\n    aes(x = game, y = points, color = location, group = player)\n  ) +\n  geom_line() +\n  geom_point(shape = \"square\") +\n  facet_wrap(~player) +\n  scale_x_continuous(breaks = c(1:10)) +\n  theme_bw() +\n  labs(\n    x = \"Game\",\n    y = \"Points Scored\",\n    title = \"Points Scored Across 10 Games\",\n    subtitle = \"Portland Trailblazers (2021-2022 Season)\",\n    caption = \"https://www.basketball-reference.com/teams/POR/2021_games.html\"\n  )\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html",
    "title": "Tidy data",
    "section": "",
    "text": "Happy families are all alike; every unhappy family is unhappy in its own way.\nLeo Tolstoy\n\n\n\nCharacteristics of tidy data:\n\nEach variable forms a column.\nEach observation forms a row.\nEach type of observational unit forms a table.\n\n\nCharacteristics of untidy data:\n!@#$%^&*()"
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html#tidy-data",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html#tidy-data",
    "title": "Tidy data",
    "section": "",
    "text": "Happy families are all alike; every unhappy family is unhappy in its own way.\nLeo Tolstoy\n\n\n\nCharacteristics of tidy data:\n\nEach variable forms a column.\nEach observation forms a row.\nEach type of observational unit forms a table.\n\n\nCharacteristics of untidy data:\n!@#$%^&*()"
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-this-data-not-tidy",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-this-data-not-tidy",
    "title": "Tidy data",
    "section": "What makes this data not tidy?",
    "text": "What makes this data not tidy?\n\n\n\nSource: Army Air Forces Statistical Digest, WW II"
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-this-data-not-tidy-1",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-this-data-not-tidy-1",
    "title": "Tidy data",
    "section": "What makes this data not tidy?",
    "text": "What makes this data not tidy?\n\n\n\nSource: Gapminder, Estimated HIV prevalence among 15-49 year olds"
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-this-data-not-tidy-2",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-this-data-not-tidy-2",
    "title": "Tidy data",
    "section": "What makes this data not tidy?",
    "text": "What makes this data not tidy?\n\n\n\nSource: US Census Fact Finder, General Economic Characteristics, ACS 2017"
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-data-tidy",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html#what-makes-data-tidy",
    "title": "Tidy data",
    "section": "What makes data tidy?",
    "text": "What makes data tidy?\n\n“Tidy datasets are easy to manipulate, model and visualise, and have a specific structure: each variable is a column, each observation is a row, and each type of observational unit is a table.”\n\n. . .\n\n\n\n\n\n\nNote\n\n\n\n“easy to manipulate” = “straightforward to manipulate”\n\n\n\n\nWickham, H. (2014). Tidy data. Journal of statistical software, 59, 1-23."
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html#displaying-vs.-summarizing-data",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html#displaying-vs.-summarizing-data",
    "title": "Tidy data",
    "section": "Displaying vs. summarizing data",
    "text": "Displaying vs. summarizing data\n\n\nDisplay\n\n\n# A tibble: 87 × 3\n   name               height  mass\n   &lt;chr&gt;               &lt;int&gt; &lt;dbl&gt;\n 1 Luke Skywalker        172    77\n 2 C-3PO                 167    75\n 3 R2-D2                  96    32\n 4 Darth Vader           202   136\n 5 Leia Organa           150    49\n 6 Owen Lars             178   120\n 7 Beru Whitesun Lars    165    75\n 8 R5-D4                  97    32\n 9 Biggs Darklighter     183    84\n10 Obi-Wan Kenobi        182    77\n# ℹ 77 more rows\n\n\n\nSummarize\n\n\n# A tibble: 3 × 2\n  gender    avg_ht\n  &lt;chr&gt;      &lt;dbl&gt;\n1 feminine    167.\n2 masculine   177.\n3 &lt;NA&gt;        175"
  },
  {
    "objectID": "slides/1-2-tidy-data/1-2-tidy-data.html#displaying-vs.-summarizing-data-1",
    "href": "slides/1-2-tidy-data/1-2-tidy-data.html#displaying-vs.-summarizing-data-1",
    "title": "Tidy data",
    "section": "Displaying vs. summarizing data",
    "text": "Displaying vs. summarizing data\n\n\nDisplay\n\nstarwars |&gt;\n  select(name, height, mass)\n\n\nSummarize\n\nstarwars |&gt;\n  group_by(gender) |&gt;\n  summarize(\n    avg_ht = mean(height, na.rm = TRUE)\n  )"
  }
]